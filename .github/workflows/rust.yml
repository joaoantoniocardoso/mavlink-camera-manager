name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y --no-install-recommends libunwind-dev libclang-dev libssl-dev pkg-config libmount-dev libsepol-dev libselinux1-dev libglib2.0-dev libgudev-1.0-dev \
        gstreamer1.0-tools libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev libgstrtspserver-1.0-dev

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Show versions
      shell: bash
      run: |
        node --version
        yarn --version
        gst-inspect-1.0 --version
        gcc --version
        rustup --version
        rustup toolchain list
        rustup default
        cargo --version

    - name: Restore Cache
      uses: Swatinem/rust-cache@v1

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --locked --verbose

    - name: Test
      uses: actions-rs/cargo@v1
      with:
        use-cross: ${{ matrix.job.use-cross }}
        command: test
        args: --locked --verbose

  lint:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy

    - name: Show versions
      shell: bash
      run: |
        rustup --version
        rustup toolchain list
        rustup default
        cargo --version
        cargo fmt -- --version
        cargo clippy -- --version

    - name: Format
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

    - name: Clippy
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features

  publish:
    runs-on: ubuntu-22.04
    needs: [build, lint]

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Publish
      if: startsWith(github.ref, 'refs/tags/')
      env:
        TOKEN: ${{ secrets.TOKEN }}
      run: |
        cargo package --no-verify
        [[ "$(git describe --tags)" =~ ^[0-9]+.[0-9]+.[0-9]+$ ]] && cargo publish --allow-dirty --token $TOKEN || echo "No tag availale for this commit."
